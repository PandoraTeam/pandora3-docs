### {{ class.name }}

{{ class.summary|raw }}

{{ class.description|raw }}

* Full name: {{ class.FullyQualifiedStructuralElementName }}
{% if class.parent %}* Extends {{ class.parent|route|join(', ')|raw }}
{% endif %}
{% if class.interfaces|length %}* Implements {{ class.interfaces|route|join(', ')|raw }}
{% endif %}
{% if class.deprecated %}* **Warning:** this class is **deprecated**. This means that this class will likely be removed in a future version.
{% endif %}

{% if class.tags.see|length or class.tags.link|length %}
**See Also:**

{% for see in class.tags.see %}
* {{ see.reference }} {% if see.description %}- {{ see.description|raw }}{% endif %}
{% endfor %}
{% for link in class.tags.link %}
* {{ link.link }} {% if link.description and link.description != link.link %}- {{ link.description|raw }}{% endif %}
{% endfor %}

{% endif %}{# class.tags.see || class.tags.link #}

{% set specialProperties = class.magicProperties ? class.inheritedProperties.merge(class.magicProperties) : class.inheritedProperties %}
{% if class.properties.merge(specialProperties)|length %}
**Properties:**
{% for property in node.properties.merge(specialProperties) %}
#### {{ property.name }}{{ property.parent.name != class.name ? ' (inherited)' }}

{{ property.summary|raw }}

{# Property signature #}
```php
{{ property.visibility }} {{ property.static ? 'static ' }}{{ '$'~property.name }}: {{ property.types|join('|')|raw }}
```

{{ property.types|route|join('|')|raw }}

{{ property.var.0.description|raw }}

{% endfor %}
{% endif %}{# class.properties #}

{% set constants = class.constants.merge(class.inheritedConstants) %}
{% if constants|length %}
**Constants:**
{% for constant in constants %}
#### {{ constant.name }}{{ constant.parent.name != class.name ? ' (inherited)' }}

{{ constant.summary|raw }}

{# Constant signature #}
```php
{{ property.visibility }} const {{ constant.name }} = {{ constant.value|raw }}
```

{{ constant.description|raw }}

{% endfor %}
{% endif %}{# class.constants #}

{% set specialMethods = class.magicMethods ? class.inheritedMethods.merge(class.magicMethods) : class.inheritedMethods %}
{% for method in class.methods.merge(specialMethods) %}
{% include 'method.md.twig' %}
{% endfor %}
